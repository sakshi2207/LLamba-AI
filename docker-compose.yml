version: "3.9"

services:
  mongodb:
    image: mongo:latest
    container_name: my_mongodb_container
    volumes:
      - mongodb_data:/data/db
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: mongo
    #   MONGO_INITDB_ROOT_PASSWORD: mongo
    ports:
      - "27017:27017"

  zookeeper:
    image: zookeeper:latest
    container_name: my_zookeeper_container
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper:2888:3888

  kafka:
    image: wurstmeister/kafka:latest
    container_name: my_kafka_container
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  #  webapp:
  #   image: ai_image:latest # Replace 'your_web_app_image' with the image name of your web application
  #   container_name: ai_container
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - mongodb

volumes:
  mongodb_data:
